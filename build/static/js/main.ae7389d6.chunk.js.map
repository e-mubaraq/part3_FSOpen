{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/comms.js","App.js","index.js"],"names":["Filter","showSearch","handleSearch","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","delPerson","filter","person","name","toLowerCase","includes","map","key","number","onClick","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","contact","put","App","useState","setPersons","setNewName","setNewNumber","setShowSearch","errorMessage","setErrorMessage","success","setSuccess","useEffect","phoneService","initialPersons","catch","error","showMessage","message","setTimeout","Notification","className","event","target","preventDefault","find","p","changedPerson","window","confirm","updatePerson","retPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"0NAWeA,EATA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC5B,OACE,iDAEI,2BAAOC,MAAOF,EAAYG,SAAUF,MCW7BG,EAdI,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,iBAAkBC,EAAzC,EAAyCA,UAAWC,EAApD,EAAoDA,mBAApD,OACf,0BAAMC,SAAUL,GACZ,sCACQ,2BAAOH,MAAOI,EAASH,SAAUI,KAEzC,wCACU,2BAAOL,MAAOM,EAAWL,SAAUM,KAE7C,6BACE,4BAAQE,KAAK,UAAb,UCgBKC,EA1BC,SAAC,GAAwC,IAAtCZ,EAAqC,EAArCA,WAAYa,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAkBpC,OAjBwBD,EAAQE,QAAO,SAAAC,GAAM,OACzCA,EAAOC,KAAKC,cACXC,SAASnB,EAAWkB,kBAgBLE,KAAI,SAAAJ,GAAM,OACtB,uBAAGK,IAAKL,EAAOC,MACdD,EAAOC,KADR,IACeD,EAAOM,OACtB,4BAAQC,QAAS,kBAAMT,EAAUE,KAAjC,e,gBCvBNQ,EAAU,eAwBD,EArBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB9B,EAhBA,SAAAC,GAGX,OAFiBL,IAAMM,KAAKP,EAASM,GAEtBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVM,SAACG,GAElB,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIE,GAEhB,OADgBT,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAME,GAC/BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC2G9BO,G,MA1HH,WAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAERxB,EAFQ,KAECyB,EAFD,OAGgBD,mBAAS,IAHzB,mBAGR/B,EAHQ,KAGCiC,EAHD,OAIoBF,mBAAS,IAJ7B,mBAIR7B,EAJQ,KAIGgC,EAJH,OAKsBH,mBAAS,IAL/B,mBAKRrC,EALQ,KAKIyC,EALJ,OAM0BJ,mBAAS,MANnC,mBAMRK,EANQ,KAMMC,EANN,OAOgBN,mBAAS,MAPzB,mBAORO,EAPQ,KAOCC,EAPD,KAShBC,qBAAU,WACRC,IAEGpB,MAAK,SAAAqB,GAAc,OAAIV,EAAWU,MAClCC,OAAM,SAAAC,GAAK,OAAIC,EAAY,kCAAkC,QAC9D,IAEJ,IAyDIA,EAAc,SAACC,GAA6B,IAApBR,IAAmB,yDAC/CD,EAAgBS,GAChBP,EAAWD,GAEXS,YAAW,WACTV,EAAgB,QACf,MAGCW,EAAe,SAAC,GAA0B,IAAxBF,EAAuB,EAAvBA,QAASR,EAAc,EAAdA,QAC/B,OAAgB,OAAZQ,EACK,KAELR,EAEF,yBAAKW,UAAU,WAAWH,GAKxB,yBAAKG,UAAU,SAASH,IAS5B,OACE,6BACE,yCAEA,kBAACE,EAAD,CAAcF,QAASV,EAAcE,QAASA,IAE9C,kBAAC,EAAD,CAAQ5C,WAAYA,EAAYC,aARjB,SAACuD,GAAD,OAAWf,EAAce,EAAMC,OAAOvD,UAUrD,iDACA,kBAAC,EAAD,CAAYI,QAASA,EAASE,UAAWA,EAAWH,UAnFtC,SAACmD,GACjBA,EAAME,iBACN,IAAM1C,EAAS,CACbC,KAAMX,EACNgB,OAAQd,GAGNK,EAAQ8C,MAAK,SAACC,GAAD,OAAOA,EAAE3C,OAASX,KAC7BO,EAAQ8C,MAAK,SAAAC,GAAC,OAAIA,EAAEtC,SAAWd,KAC/B2C,EAAY,GAAD,OAAInC,EAAOC,KAAX,iCAA+C,KArB7C,SAACe,EAAIxB,GACxB,IAAMQ,EAASH,EAAQ8C,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KACpC6B,EAAa,2BAAO7C,GAAP,IAAeM,OAAQd,IAEtCsD,OAAOC,QAAP,UAAkB/C,EAAOC,KAAzB,4EACF8B,EAAoBf,EAAI6B,GACrBlC,MAAK,SAAAkC,GACFvB,EAAWzB,EAAQO,KAAI,SAAAwC,GAAC,OAAIA,EAAE5B,KAAOA,EAAK4B,EAAIC,SAkBlDG,CADanD,EAAQ8C,MAAK,SAAAC,GAAC,OAAIA,EAAE3C,OAASX,KACxB0B,GAAIxB,GACtB2C,EAAY,GAAD,OAAInC,EAAOC,KAAX,wCAGM,KAAZX,GAAgC,KAAdE,EACvB2C,EAAY,kCAAkC,IAGhDJ,EAAoB/B,GACjBW,MAAK,SAAAsC,GAAS,OAAI3B,EAAWzB,EAAQqD,OAAOD,OAC7Cd,EAAY,GAAD,OAAInC,EAAOC,KAAX,iCAGfsB,EAAW,IACXC,EAAa,KAyDTjC,iBAdiB,SAACiD,GAAD,OAAWjB,EAAWiB,EAAMC,OAAOvD,QAchBO,mBAbjB,SAAC+C,GAAD,OAAWhB,EAAagB,EAAMC,OAAOvD,UAe1D,uCACA,kBAAC,EAAD,CAASF,WAAYA,EAAYa,QAASA,EACxCC,UA1DY,SAAAE,GACZ8C,OAAOC,QAAP,iBAAyB/C,EAAOC,KAAhC,SACA8B,EAA0B/B,EAAOgB,IAChCL,MAAK,WACJW,EAAWzB,EAAQE,QAAO,SAAA6C,GAAC,OAAIA,EAAE5B,KAAOhB,EAAOgB,OAC/CmB,EAAY,GAAD,OAAInC,EAAOC,KAAX,uCAEZgC,OAAO,SAAAC,GACNC,EAAY,GAAD,OAAInC,EAAOC,KAAX,qCAAmD,MAEhEqB,EAAWzB,EAAQE,QAAO,SAAA6C,GAAC,OAAIA,IAAM5C,aCvE7CmD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.ae7389d6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ showSearch, handleSearch }) => {\n  return(\n    <div>\n        filter shown with \n        <input value={showSearch} onChange={handleSearch}/>\n    </div>\n  )\n}\n    \nexport default Filter","import React from 'react'\n\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => (\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ showSearch, persons, delPerson }) => {\n    const searchedPersons = persons.filter(person =>\n        person.name.toLowerCase()\n        .includes(showSearch.toLowerCase())\n    )\n    /*return(\n    <div>\n    {showSearch \n        ? searchedPersons.map(person => <p key={person.name}>\n            {person.name} {person.number} \n            <button onClick={() => delPerson(person.id)}>delete</button></p>)\n\n        : persons.map((person) => <p key={person.name}>\n            {person.name} {person.number} \n            <button onClick={() => delPerson(person.id)}>delete</button></p>)  }\n    </div>   \n    ) */\n\n    return (\n        searchedPersons.map(person => \n            <p key={person.name}>\n            {person.name} {person.number} \n            <button onClick={() => delPerson(person)}>delete</button></p>)\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n//const baseUrl = 'https://agile-savannah-15025.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request =  axios.post(baseUrl, newPerson)\n    //return request.then(response => setPersons(persons.concat(response.data)))\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, contact) => {\n    const request = axios.put(`${baseUrl}/${id}`, contact)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './Filter'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport phoneService from './services/comms'\nimport './App.css'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showSearch, setShowSearch ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ success, setSuccess ] = useState(null)\n\n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n      .catch(error => showMessage('Records could not be retrieved', false))\n  } , [])\n\n  const updatePerson = (id, newNumber) => {\n    const person = persons.find(p => p.id === id)\n    const changedPerson = {...person, number: newNumber}\n\n    if (window.confirm(`${person.name} is already added to phonebook, replace the old number with a new one?`)) {\n      phoneService.update(id, changedPerson)\n        .then(changedPerson => {\n            setPersons(persons.map(p => p.id !== id ? p : changedPerson))\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.find((p) => p.name === newName)) {\n      if (persons.find(p => p.number === newNumber)) {\n          showMessage(`${person.name} is already in the phonebook`, false)\n      }\n      else {\n        const pers = persons.find(p => p.name === newName)\n        updatePerson(pers.id, newNumber)\n        showMessage(`${person.name} has been updated in the phonebook`)\n      }\n    }\n    else if (newName === '' || newNumber === '') {\n        showMessage('The fields should not be empty', false)\n    }\n    else {\n      phoneService.create(person)\n        .then(retPerson => setPersons(persons.concat(retPerson)))\n        showMessage(`${person.name} was added to the phonebook`)\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const delPerson = person => {       \n    if (window.confirm(`Delete ${person.name} ?`)) {\n        phoneService.deletePerson(person.id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id))\n          showMessage(`${person.name} was deleted from the phonebook`)\n        })\n        .catch (error => {\n          showMessage(`${person.name} was already deleted from server`, false)\n        })\n        setPersons(persons.filter(p => p !== person))\n    }\n    \n}\n\nconst showMessage = (message, success = true) => {\n  setErrorMessage(message);\n  setSuccess(success)\n\n  setTimeout(() => {\n    setErrorMessage(null)\n  }, 3000)\n}\n\nconst Notification = ( {message, success} ) => {\n  if (message === null) {\n    return null\n  }\n  if (success) {\n    return (\n    <div className=\"success\">{message}</div>\n    )\n  }\n  else {\n    return(\n      <div className=\"error\">{message}</div>\n    )\n  }\n}\n\nconst handleNameChange = (event) => setNewName(event.target.value)\nconst handleNumberChange = (event) => setNewNumber(event.target.value)\nconst handleSearch = (event) => setShowSearch(event.target.value)\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      \n      <Notification message={errorMessage} success={success}/>\n\n      <Filter showSearch={showSearch} handleSearch={handleSearch} />\n\n      <h2>Add a new contact</h2>\n      <PersonForm newName={newName} newNumber={newNumber} addPerson={addPerson}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      \n      <h2>Numbers</h2>\n      <Persons showSearch={showSearch} persons={persons}\n        delPerson={delPerson} />\n      \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}